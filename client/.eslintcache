[{"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\index.js":"1","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\App.js":"2","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\NavBar.js":"3","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Main.js":"4","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\PageNotFound.js":"5","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\CalendarPage.js":"6","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Home.js":"7","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Login.js":"8","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Register.js":"9","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Posts.js":"10","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Profile.js":"11","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\CreatePosts.js":"12","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\ProductsPage.js":"13","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\AR.js":"14","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Reacts.js":"15","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\GoogleCalendarButton.js":"16","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\HairstylesPage.js":"17","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\GetPosts.js":"18","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\PullProducts.js":"19","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\PullHairstyles.js":"20"},{"size":174,"mtime":1603219722131,"results":"21","hashOfConfig":"22"},{"size":665,"mtime":1605896968612,"results":"23","hashOfConfig":"22"},{"size":3217,"mtime":1607119216928,"results":"24","hashOfConfig":"22"},{"size":3945,"mtime":1607116648803,"results":"25","hashOfConfig":"22"},{"size":217,"mtime":1606310100561,"results":"26","hashOfConfig":"22"},{"size":9435,"mtime":1607065771991,"results":"27","hashOfConfig":"22"},{"size":12410,"mtime":1607116648799,"results":"28","hashOfConfig":"22"},{"size":3220,"mtime":1605896978840,"results":"29","hashOfConfig":"22"},{"size":8403,"mtime":1606310100567,"results":"30","hashOfConfig":"22"},{"size":6141,"mtime":1607108907093,"results":"31","hashOfConfig":"22"},{"size":18560,"mtime":1607065772001,"results":"32","hashOfConfig":"22"},{"size":9588,"mtime":1606707170653,"results":"33","hashOfConfig":"22"},{"size":1902,"mtime":1607112288946,"results":"34","hashOfConfig":"22"},{"size":1598,"mtime":1607112621671,"results":"35","hashOfConfig":"22"},{"size":6296,"mtime":1607108939685,"results":"36","hashOfConfig":"22"},{"size":4237,"mtime":1607065771993,"results":"37","hashOfConfig":"22"},{"size":1853,"mtime":1607112288897,"results":"38","hashOfConfig":"22"},{"size":2429,"mtime":1607116648793,"results":"39","hashOfConfig":"22"},{"size":688,"mtime":1607112288964,"results":"40","hashOfConfig":"22"},{"size":671,"mtime":1607112288948,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"x2rx8n",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\index.js",[],["85","86"],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\App.js",[],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\NavBar.js",["87"],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Main.js",[],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\PageNotFound.js",[],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\CalendarPage.js",["88"],"import React, { Component } from \"react\";\r\nimport Calendar from 'react-calendar'\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport '../App.css';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\n\r\nclass CalendarPage extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n    //Bind methods make it so that the functions are made public and other functions can use and access them\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n    this.state = {\r\n      sign: ApiCalendar.sign, //Boolean value that is set to true if user is signed in to Google Calendar and false if not\r\n      value: new Date(), //Date of the calendar tile that the user clicked\r\n      loading: true,\r\n      newEvent: 0,\r\n      loggedIn: false\r\n    };\r\n    this.signUpdate = this.signUpdate.bind(this);\r\n     ApiCalendar.onLoad(() => { //Function is called when the API is loaded\r\n        ApiCalendar.listenSign(this.signUpdate); //Checks if user is signed in to Google Calendar\r\n        if (ApiCalendar.sign) { //Set visibility of log in/log out buttons depending on if the user is signed in or not\r\n          document.getElementById(\"calendar-login\").style.display = \"none\";\r\n          document.getElementById(\"calendar-logout\").style.display = \"block\";\r\n          this.getEventDays();\r\n        }\r\n        else\r\n        {\r\n          document.getElementById(\"calendar-login\").style.display = \"block\";\r\n          document.getElementById(\"calendar-logout\").style.display = \"none\";\r\n        }\r\n    });\r\n  }\r\n\r\n  events = [[],[],[]]; //Array used to store all events that are retrieved from the user's Google Calendar\r\n\r\n  signUpdate(sign) {\r\n    this.setState({ //Sets sign state to true if user is signed in and false if not\r\n      sign,\r\n    })\r\n    if (sign) { //Set visibility of log in/log out buttons when the user logs in or out\r\n      document.getElementById(\"calendar-login\").style.display = \"none\";\r\n      document.getElementById(\"calendar-logout\").style.display = \"block\";\r\n    }\r\n    else\r\n    {\r\n      document.getElementById(\"calendar-login\").style.display = \"block\";\r\n      document.getElementById(\"calendar-logout\").style.display = \"none\";\r\n    }\r\n    window.location.reload(); //Refresh the page\r\n  }\r\n\r\n  handleItemClick(event, name) { //Function that calls when the user clicks to sign in/out of Google Calendar\r\n    if (name === 'sign-in') {\r\n      ApiCalendar.handleAuthClick(); //Call function to bring up Google sign in menu\r\n    } else if (name === 'sign-out') {\r\n      ApiCalendar.handleSignoutClick(); //Call function to sign out of Google Calendar\r\n      document.getElementById(\"schedule-list\").innerHTML = \"\"; //Clear the schedule card\r\n    }\r\n  }\r\n\r\n  convertHour(hour) { //Function that converts 24hr time to 12hr time\r\n    var time = {}; //Array that stores hour value in 0 index and AM or PM in the 1 index\r\n    if (hour > 12) {\r\n      time[0] = hour-12;\r\n      time[1] = \"PM\";\r\n    }\r\n    else {\r\n      time[0] = hour;\r\n      time[1] = \"AM\";\r\n    }\r\n    return time;\r\n  }\r\n\r\n  convertMinute(minute) { //Function that converts the minute value to a more readable value when the minute is at the start of the hour\r\n    var time;             //This is needed or else a time such as \"5:00\" will appear as \"5:0\"\r\n    if (minute === 0) {\r\n      time = \"00\";\r\n    }\r\n    else {\r\n      time = minute;\r\n    }\r\n    return time;\r\n  }\r\n\r\n  changeSelectedDate = date => { //Function that calls when the user clicks on a tile on the calendar\r\n    var month = date.getMonth();\r\n    var year = date.getFullYear();\r\n    var day = date.getDate();\r\n    this.getEventDays();\r\n    if (ApiCalendar.sign) { //Only executes if the user is signed in to Google Calendar\r\n      console.log('Signed in');\r\n      ApiCalendar.listUpcomingEvents(100) //Lists the next 100 upcoming events\r\n        .then(({result}) => {\r\n          console.log(result.items);\r\n          var scheduleCard = document.getElementById(\"schedule-list\");\r\n          var i=0;  \r\n          scheduleCard.innerHTML = \"\"; //Reset the card to be empty\r\n          for (i=0; i<result.items.length; i++) { //Loops through the list of upcoming events\r\n            var scheduleDate = (new Date(Date.parse(result.items[i].start.dateTime))); //Convert dateTime object to Date object\r\n            if (day === scheduleDate.getDate() && month === scheduleDate.getMonth() && year === scheduleDate.getFullYear() && result.items[i].summary.substring(0, 10) === \"Hair Thing\") { //If the event is on the same day as the day the user clicked and begins with \"Hair Thing\"\r\n              var node = document.createElement(\"LI\"); //Create list element\r\n              node.className += \" list-group-item\"; //Adds bootstrap CSS for list group\r\n              node.className += \" schedule-item\"; //Adds CSS for list items\r\n              var hour = this.convertHour(scheduleDate.getHours()); //Format hour from 24hr time to 12hr time\r\n              var minute = this.convertMinute(scheduleDate.getMinutes()); //See convertMinute code comments\r\n              var title = result.items[i].summary.substring(13); //Ignore the first 13 characters of the event name (this would be the part of the event that says \"Hair Thing - \")\r\n              var textnode = document.createTextNode(title + \" - \" + hour[0] + \":\" + minute + \" \" + hour[1]); //Create text that would show the event title and start time\r\n              node.appendChild(textnode); //Add text to node\r\n              textnode = document.createTextNode(result.items[i].description); //Create text node for the event description\r\n              var breaknode = document.createElement(\"BR\"); //Create break element\r\n              node.appendChild(breaknode);\r\n              node.appendChild(textnode);\r\n              scheduleCard.appendChild(node); //Add node to the schedule card\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        console.log('Not signed in');\r\n      }\r\n  };\r\n\r\n  async getEventDays () { //Function used to retrieve the events on the user's Google Calendar\r\n    var j=0;\r\n    if (ApiCalendar.sign) { //If the user is signed into Google Calendar\r\n      const response = await ApiCalendar.listUpcomingEvents(100); //Retrieve the next 100 events\r\n      var result = response.result; //Result of the API call\r\n      for (var i=0; i<result.items.length; i++) { //Loops through the list of upcoming events\r\n        var eventDate = (new Date(Date.parse(result.items[i].start.dateTime))); //Convert dateTime object to Date object\r\n        if (result.items[i].summary.substring(0, 10) === \"Hair Thing\") { //If the event begins with \"Hair Thing\"\r\n          if (!this.events[j]) { //Initialise array, this is necessary for multidimensional arrays in JavaScript\r\n            this.events[j] = []\r\n          }\r\n          this.events[j][0] = eventDate.getDate(); //Store day value\r\n          this.events[j][1] = eventDate.getMonth(); //Store month value\r\n          this.events[j][2] = eventDate.getFullYear(); //Store year value\r\n          j++; \r\n        }\r\n      }\r\n      this.setState ({ //Let the app know that the API is finished loading and is now allowed to render the component\r\n        loading: false,\r\n      });\r\n    }\r\n    else {\r\n      console.log(\"Not signed in\");\r\n    }\r\n  }\r\n\r\n  allEvents(events, date) { //Function to mark days where an event is on\r\n    for (var i=0; i<this.events.length; i++) {\r\n      if(date.getDate() === this.events[i][0] && date.getMonth() === this.events[i][1] && date.getFullYear() === this.events[i][2]) //If the calendar tile is a day that an event is on\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onChange = value => this.setState({ value }) //Sets value state to the date that the user clicked on the calendar\r\n\r\n    render() { \r\n        const { value } = this.state.value;\r\n        var tileClassName=({ date, view }) => {\r\n          if(this.allEvents(this.events, date)) {\r\n            return 'highlight'\r\n          }\r\n        }\r\n        return (\r\n          <div className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"calendar-main-panel\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-5\">\r\n                    <div className=\"calendar\">\r\n                      <Calendar\r\n                        tileClassName = {tileClassName}\r\n                        value={value}\r\n                        onChange={this.changeSelectedDate} >\r\n                      </Calendar>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-7\">\r\n                      <div id=\"calendar-card\" className=\"card calendar-card h-100\">\r\n                        <ul id=\"schedule-list\" className=\"list-group\">\r\n                        </ul>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"google-calendar-buttons\">\r\n                  <button type=\"button\" id=\"calendar-login\" className=\"btn btn-primary\" style={{display: \"none\"}} onClick={(e) => this.handleItemClick(e, 'sign-in')}>Log in to Google Calendar</button>\r\n                  <button type=\"button\" id=\"calendar-logout\" className=\"btn btn-danger\" style={{display: \"none\"}} onClick={(e) => this.handleItemClick(e, 'sign-out')}>Log Out of Google Calendar</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarPage;","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Home.js",["89","90","91","92"],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Login.js",[],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Register.js",[],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Posts.js",[],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Profile.js",[],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\CreatePosts.js",[],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\ProductsPage.js",["93"],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\AR.js",["94","95","96","97","98","99","100","101","102"],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\Reacts.js",["103"],"import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst Reacts = ({ post }) => {\r\n  const [Likes, setLikes] = useState(0);\r\n  const [Dislikes, setDislikes] = useState(0);\r\n  const [LikeAction, setLikeAction] = useState(null);\r\n  const [DislikeAction, setDislikeAction] = useState(null);\r\n  const [DeleteAction, setDeleteAction] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLikes(post.likes);\r\n    setDislikes(post.dislikes);\r\n    if (post.userreacts.length > 0) {\r\n      if (post.userreacts[0].liked === \"liked\") {\r\n        setLikeAction(\"liked\");\r\n      } else if (post.userreacts[0].liked === \"disliked\") {\r\n        setDislikeAction(\"disliked\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const DeletePost = async () => {\r\n    try {\r\n      setDeleteAction(true);\r\n      let postID = post.id;\r\n      const body = { postID };\r\n      const res = await fetch(\"/posts/delete\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          token: localStorage.token,\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseData = await res.json();\r\n      if (parseData === \"Post deleted!\") {\r\n        toast.success(parseData, {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          onClose: () => window.location.reload(),\r\n        });\r\n        setDeleteAction(false);\r\n      } else {\r\n        toast.error(\"Problems deleting post\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const onLike = async () => {\r\n    try {\r\n      let react = \"\";\r\n      let postID = post.id;\r\n\r\n      if (LikeAction === null) {\r\n        let react = \"liked\";\r\n        let body = { postID, react };\r\n        const res = await fetch(\"/posts/upLike\", {\r\n          method: \"PUT\",\r\n          headers: {\r\n            token: localStorage.token,\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        });\r\n\r\n        const parseData = await res.json();\r\n\r\n        if (parseData === \"Success\") {\r\n          setLikes(Likes + 1);\r\n          setLikeAction(\"liked\");\r\n\r\n          //If dislike button already clicked then minus one from dislikes\r\n          if (DislikeAction !== null) {\r\n            setDislikeAction(null);\r\n            setDislikes(Dislikes - 1);\r\n          }\r\n        } else {\r\n          toast.error(\"Couldn't like post\");\r\n        }\r\n      } else {\r\n        react = \"noreact\";\r\n        let body = { postID, react };\r\n        const res = await fetch(\"/posts/unLike\", {\r\n          method: \"PUT\",\r\n          headers: {\r\n            token: localStorage.token,\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        });\r\n\r\n        const parseData = await res.json();\r\n\r\n        if (parseData === \"Success\") {\r\n          setLikes(Likes - 1);\r\n          setLikeAction(null);\r\n        } else {\r\n          toast.error(\"Couldn't remove like\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const onDisLike = async () => {\r\n    try {\r\n      let react = \"\";\r\n      let postID = post.id;\r\n\r\n      if (DislikeAction === null) {\r\n        let react = \"disliked\";\r\n        let body = { postID, react };\r\n        const res = await fetch(\"/posts/upDislike\", {\r\n          method: \"PUT\",\r\n          headers: {\r\n            token: localStorage.token,\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        });\r\n\r\n        const parseData = await res.json();\r\n\r\n        if (parseData === \"Success\") {\r\n          setDislikes(Dislikes + 1);\r\n          setDislikeAction(\"disliked\");\r\n\r\n          //If like button already clicked then minus one from likes\r\n          if (LikeAction != null) {\r\n            setLikeAction(null);\r\n            setLikes(Likes - 1);\r\n          }\r\n        } else {\r\n          toast.error(\"Couldn't dislike post\");\r\n        }\r\n      } else {\r\n        react = \"noreact\";\r\n        let body = { postID, react };\r\n        const res = await fetch(\"/posts/unDisLike\", {\r\n          method: \"PUT\",\r\n          headers: {\r\n            token: localStorage.token,\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(body),\r\n        });\r\n\r\n        const parseData = await res.json();\r\n\r\n        if (parseData === \"Success\") {\r\n          setDislikes(Dislikes - 1);\r\n          setDislikeAction(null);\r\n        } else {\r\n          toast.error(\"Couldn't remove dislike\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span className=\"ml-4\">\r\n      <span>\r\n        <Icon\r\n          data-tip\r\n          data-for=\"Like\"\r\n          type=\"like\"\r\n          theme={LikeAction === \"liked\" ? \"filled\" : \"outlined\"}\r\n          onClick={onLike}\r\n        />\r\n        <span style={{ paddingLeft: \"4px\", cursor: \"auto\" }}>{Likes}</span>\r\n        <ReactTooltip id=\"Like\" effect=\"solid\">\r\n          <span>Like</span>\r\n        </ReactTooltip>\r\n      </span>\r\n      &nbsp;&nbsp;\r\n      <span>\r\n        <Icon\r\n          data-tip\r\n          data-for=\"Dislike\"\r\n          type=\"dislike\"\r\n          theme={DislikeAction === \"disliked\" ? \"filled\" : \"outlined\"}\r\n          onClick={onDisLike}\r\n        />\r\n        <span style={{ paddingLeft: \"4px\", cursor: \"auto\" }}>{Dislikes}</span>\r\n        <ReactTooltip id=\"Dislike\" effect=\"solid\">\r\n          <span>Dislike</span>\r\n        </ReactTooltip>\r\n      </span>\r\n      &nbsp;&nbsp;\r\n      <span>\r\n        <Icon\r\n          data-tip\r\n          data-for=\"Delete\"\r\n          type=\"delete\"\r\n          theme={DeleteAction ? \"filled\" : \"outlined\"}\r\n          onClick={() => {\r\n            if (window.confirm(\"Delete this post?\")) {\r\n              DeletePost(post.id);\r\n            }\r\n          }}\r\n        />\r\n        <ReactTooltip id=\"Delete\" effect=\"solid\">\r\n          <span>Delete Post</span>\r\n        </ReactTooltip>\r\n      </span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Reacts;\r\n","C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\GoogleCalendarButton.js",[],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\HairstylesPage.js",["104"],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\GetPosts.js",[],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\PullProducts.js",["105","106"],"C:\\Users\\chris\\Desktop\\COMP3613 - Soft Eng II\\SE2Project\\SE2Project\\client\\src\\components\\PullHairstyles.js",["107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":19,"column":10,"nodeType":"114","messageId":"115","endLine":19,"endColumn":20},{"ruleId":"112","severity":1,"message":"116","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":15},{"ruleId":"112","severity":1,"message":"117","line":2,"column":47,"nodeType":"114","messageId":"115","endLine":2,"endColumn":56},{"ruleId":"112","severity":1,"message":"118","line":19,"column":8,"nodeType":"114","messageId":"115","endLine":19,"endColumn":14},{"ruleId":"112","severity":1,"message":"119","line":20,"column":8,"nodeType":"114","messageId":"115","endLine":20,"endColumn":13},{"ruleId":"112","severity":1,"message":"120","line":238,"column":10,"nodeType":"114","messageId":"115","endLine":238,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":35,"column":37,"nodeType":"123","endLine":35,"endColumn":91},{"ruleId":"112","severity":1,"message":"124","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":9},{"ruleId":"125","severity":1,"message":"126","line":27,"column":13,"nodeType":"123","endLine":27,"endColumn":47},{"ruleId":"125","severity":1,"message":"126","line":30,"column":13,"nodeType":"123","endLine":30,"endColumn":49},{"ruleId":"125","severity":1,"message":"126","line":33,"column":13,"nodeType":"123","endLine":33,"endColumn":46},{"ruleId":"125","severity":1,"message":"126","line":36,"column":13,"nodeType":"123","endLine":36,"endColumn":64},{"ruleId":"125","severity":1,"message":"126","line":39,"column":13,"nodeType":"123","endLine":39,"endColumn":62},{"ruleId":"125","severity":1,"message":"126","line":42,"column":13,"nodeType":"123","endLine":42,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":45,"column":13,"nodeType":"123","endLine":45,"endColumn":59},{"ruleId":"125","severity":1,"message":"126","line":48,"column":13,"nodeType":"123","endLine":48,"endColumn":66},{"ruleId":"127","severity":1,"message":"128","line":23,"column":6,"nodeType":"129","endLine":23,"endColumn":8,"suggestions":"130"},{"ruleId":"121","severity":1,"message":"122","line":35,"column":37,"nodeType":"123","endLine":35,"endColumn":73},{"ruleId":"112","severity":1,"message":"131","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"132","line":24,"column":8,"nodeType":"129","endLine":24,"endColumn":10,"suggestions":"133"},{"ruleId":"112","severity":1,"message":"131","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'searchData' is assigned a value but never used.","Identifier","unusedVar","'toast' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","'CalendarPlaceholder' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'$' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'post.dislikes', 'post.likes', and 'post.userreacts'. Either include them or remove the dependency array. If 'setLikes' needs the current value of 'post.likes', you can also switch to useReducer instead of useState and read 'post.likes' in the reducer.","ArrayExpression",["136"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [post.dislikes, post.likes, post.userreacts]",{"range":"142","text":"143"},"Update the dependencies array to be: [getProducts]",{"range":"144","text":"145"},[812,814],"[post.dislikes, post.likes, post.userreacts]",[600,602],"[getProducts]"]